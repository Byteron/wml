{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "WML",
	"patterns": [

		{
			"captures": {
				"1": {
					"name": "keyword.other.definition.wml"
				},
				"2": {
					"name": "punctuation.separator.key-value.wml"
				}
			},
			"match": "\\b([a-zA-Z0-9_.-]+)\\b\\s*(=)"
		},

		{
			"match":"\\b(\\=\\s*|\\+|\\-|\\,|\\:|\\~|\\.|\\^)\\b",
			"name":"keyword.operator.wml"
		},

		{
			"begin":"\"",
			"end":"\"",
			"name":"string.quoted.double.wml",
			"patterns":
			[
				{
					"match":"\\\\.",
					"name":"constant.character.escape.untitled.wml"
				}
			]
		},



		{
			"begin":"(\\#define)\\s([^\\s]*)(\\s(.*))?\\n",
			"contentName":"variable.language.wml",
			"beginCaptures":
			{
				"1":
				{
					"name":"entity.name.function.preprocessor.wml"
				},
				"2":
				{
					"name":"entity.name.function"
				},
				"3":
				{
					"name":"variable.parameter"
				}
			},
			"end":"(\\#enddef)",
			"endCaptures":
			{
				"1":
				{
					"name":"entity.name.function.preprocessor.wml"
				}
			},
			"name":"support.function.definition.wml",
			"patterns":
			[
				{
					"include":"$self"
				}
			]
		},

		{
			"begin":"(\\#ifdef|\\#ifndef|\\#ifver)\\s([^\\s]*)",
			"contentName":"variable.language.wml",
			"beginCaptures":
			{
				"1":
				{
					"name":"entity.name.function.preprocessor.wml"
				},
				"2":
				{
					"name":"entity.name.function.wml"
				}
			},
			"end":"(\\#endif)",
			"endCaptures":
			{
				"1":
				{
					"name":"entity.name.function.preprocessor.wml"
				}
			},
			"name":"support.function.definition.wml",
			"patterns":
			[
				{
					"include":"$self"
				}
			]
		},



		{
			"match":"(\\#undef|\\#textdomain)\\s([^\\s]*)",
			"captures":
			{
				"1":
				{
					"name":"entity.name.function.preprocessor.wml"
				},
				"2":
				{
					"name":"entity.name.function.wml"
				}
			},
			"name":"support.function.definition.wml"
		},

		{
			"match":"(\\#else)",
			"captures":
			{
				"1":
				{
					"name":"entity.name.function.preprocessor.wml"
				}
			},
			"name":"support.function.definition.wml"
		}

		{
			"begin":"\\{\\b([_0-9a-zA-Z]*)",
			"contentName":"variable.language.wml",
			"end":"\\}",
			"name":"support.function.call.wml",
			"patterns":
			[
				{
					"include":"$self"
				}
			]
		},

		{
			"begin":"\\[([_A-Za-z]*)\\]",
			"contentName":"variable.language.wml",
			"end":"\\[\\\/\\1\\]",
			"name":"support.constant.tag.wml",
			"patterns":
			[
				{
					"include":"$self"
				}
			]
		},

		{
			"match":"\\#\\s.*",
			"name":"comment.wml"
		}
	],
	"scopeName": "source.wml"
}