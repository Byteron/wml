{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "WML",
	"fileTypes": 
	[
		"cfg",
		"pbl"
	],
	"patterns": 
	[
		{
			"captures": {
				"1": {
					"name": "keyword.wml"
				},
				"2": {
					"name": "keyword.operator.wml"
				}
			},
			"match": "\\b([//,a-zA-Z0-9_.-]+)\\b\\s*(=)"
		},
		{
			"match":"\\b(\\=\\s*|\\=|\\+|\\-|\\,|\\:|\\~|\\.|\\^)\\b",
			"name":"keyword.operator.wml"
		},
		{
			"match":"\\b(yes|no|true|false|null)\\b",
			"name":"constant.language.wml"
		},
		
		{
			"match":"\\b([0-9]+)\\b",
			"name":"constant.language.wml"
		},
		{
			"begin":"\"",
			"end":"\"",
			"name":"string.wml",
			"patterns":
			[
				{
					"match":"\\\\.",
					"name":"constant.character.escape.wml"
				}
			]
		},
		{
			"begin":"(\\#define)\\s([^\\s]*)(\\s(.*))?\\n",
			"beginCaptures":
			{
				"1":
				{
					"name":"entity.name.function.preprocessor.wml"
				},
				"2":
				{
					"name":"entity.name.macro.wml"
				},
				"3":
				{
					"name":"variable.parameter.wml"
				}
			},
			"contentName": "text.wml",
			"end":"(\\#enddef)",
			"endCaptures":
			{
				"1":
				{
					"name":"entity.name.function.preprocessor.wml"
				}
			},
			"name":"support.function.definition.wml",
			"patterns":
			[
				{
					"include":"$self"
				}
			]
		},{
			"begin":"(\\#arg)\\s([^\\s]*)",
			"beginCaptures":
			{
				"1":
				{
					"name":"entity.name.function.preprocessor.wml"
				},
				"2":
				{
					"name":"variable.parameter.wml"
				}
			},
			"contentName": "text.wml",
			"end":"(\\#endarg)",
			"endCaptures":
			{
				"1":
				{
					"name":"entity.name.function.preprocessor.wml"
				}
			},
			"name":"support.function.definition.wml",
			"patterns":
			[
				{
					"include":"$self"
				}
			]
		},

		{
			"begin":"(\\#ifdef|\\#ifndef)\\s([^\\s]*)",
			"beginCaptures":
			{
				"1":
				{
					"name":"entity.name.function.preprocessor.wml"
				},
				"2":
				{
					"name":"entity.name.macro.wml"
				}
			},
			"contentName": "text.wml",
			"end":"(\\#endif)",
			"endCaptures":
			{
				"1":
				{
					"name":"entity.name.function.preprocessor.wml"
				}
			},
			"name":"entity.name.function.wml",
			"patterns":
			[
				{
					"include":"$self"
				}
			]
		},
		{
			"begin":"(\\#ifver|\\#ifnver)\\s([^\\s]*)\\s([=<>]*)\\s([^\\s]*)",
			"beginCaptures":
			{
				"1":
				{
					"name":"entity.name.function.preprocessor.wml"
				},
				"2":
				{
					"name":"entity.name.version.wml"
				},
				"3":
				{
					"name":"keyword.operator.wml"
				},
				"4":
				{
					"name":"entity.name.version.wml"
				}
			},
			"contentName": "text.wml",
			"end":"(\\#endif)",
			"endCaptures":
			{
				"1":
				{
					"name":"entity.name.function.preprocessor.wml"
				}
			},
			"name":"entity.name.function.wml",
			"patterns":
			[
				{
					"include":"$self"
				}
			]
		},
		{
			"match":"(\\#undef)\\s([^\\s]*)",
			"captures":
			{
				"1":
				{
					"name":"entity.name.function.preprocessor.wml"
				},
				"2":
				{
					"name":"entity.name.function.wml"
				}
			},
			"name":"entity.name.function.wml"
		},
		{
			"match":"(\\#\\swmllint\\:|\\#\\swmlscope\\:|\\#\\swmlindent\\:)(\\s(.*))?\\n",
			"name":"entity.name.wmllint.wml"
		},
		{
			"match":"(\\#textdomain)\\s([^\\s]*)",
			"captures":
			{
				"1":
				{
					"name":"entity.name.function.preprocessor.wml"
				},
				"2":
				{
					"name":"entity.name.textdomain.wml"
				}
			},
			"name":"entity.name.function.wml"
		},
		{
			"match":"(\\#warning)(\\s(.*))?\\n",
			"captures":
			{
				"1":
				{
					"name":"entity.name.function.preprocessor.wml"
				},
				"2":
				{
					"name":"token.warn-token.wml"
				}
			},
			"name":"entity.name.function.wml"
		},
		{
			"match":"(\\#error)(\\s(.*))?\\n",
			"captures":
			{
				"1":
				{
					"name":"entity.name.function.preprocessor.wml"
				},
				"2":
				{
					"name":"token.error-token.wml"
				}
			},
			"name":"entity.name.function.wml"
		},
		{
			"match":"(\\#else)",
			"captures":
			{
				"1":
				{
					"name":"entity.name.function.preprocessor.wml"
				}
			},
			"name":"entity.name.function.wml"
		},
		{
			"begin":"(\\{|\\{\\~)\\b([_0-9a-zA-Z\\/\\-\\.]*)",
			"contentName": "text.wml",
			"end":"\\}",
			"name":"support.function.wml",
			"patterns":
			[
				{
					"include":"$self"
				}
			]
		},
		{
			"begin":"(\\()\\b([_0-9a-zA-Z\\/\\-\\.]*)",
			"contentName": "text.wml",
			"end":"\\)",
			"name":"text.wml",
			"patterns":
			[
				{
					"include":"$self"
				}
			]
		},
		{
			"begin":"\\[([_A-Za-z0-9]*)\\]",
			"contentName": "text.wml",
			"end":"\\[\\\/\\1\\]",
			"name":"punctuation.definition.tag.wml",
			"patterns":
			[
				{
					"include":"$self"
				}
			]
		},
		{
			"match":"\\#\\s.*",
			"name":"comment.wml"
		},
		{
			"match":"\\#\\!\\s.*",
			"name":"comment.wml"
		}
	],
	"scopeName": "source.wml"
}